---
import type { Hero as Props } from '~/types';
import Button from '~/components/ui/Button.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  actions = [],
  image,
} = Astro.props;
---

<section class="relative not-prose">
  <div class="relative aspect-[16/9] sm:aspect-[21/9]">
    {
      image && (
        <img
          src={typeof image.src === 'string' ? image.src : ''}
          alt={image.alt || ''}
          class="absolute inset-0 object-cover w-full h-full"
          loading="eager"
          fetchpriority="high"
          width={1800}
          height={1012}
        />
      )
    }
    <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/40 to-transparent"></div>
  </div>
  <div class="absolute inset-0 flex items-center justify-center">
    <div class="mx-auto max-w-7xl px-4 py-24 sm:py-32 lg:py-40 text-center text-white">
      {
        title && (
          <h1 class="text-4xl sm:text-6xl font-bold tracking-tight text-white [text-wrap:balance]" set:html={title} />
        )
      }
      {subtitle && <p class="mt-3 text-lg sm:text-xl text-white/90 max-w-prose mx-auto" set:html={subtitle} />}
      {
        Array.isArray(actions) && (
          <div class="mt-8 max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
            {actions.map((action) => (
              <div class="flex w-full sm:w-auto">
                <Button {...(action || {})} class="w-full sm:mb-0" />
              </div>
            ))}
          </div>
        )
      }
    </div>
  </div>
</section>
